# app.py
import os
from fastapi import FastAPI, Header, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import List, Optional, Dict, Any

API_TOKEN = os.getenv("API_TOKEN", "").strip()

app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # 必要に応じてドメインを絞ってOK
    allow_credentials=False,
    allow_methods=["POST","OPTIONS"],
    allow_headers=["Content-Type","Authorization"],
)

class Item(BaseModel):
    title: Optional[str] = None
    rate: Optional[str] = None
    playedAt: Optional[str] = None
    href: Optional[str] = None
    extra: Optional[Dict[str, Any]] = None

class IngestPayload(BaseModel):
    sourceUrl: str
    items: List[Item]

def _auth(authorization: Optional[str]):
    if not API_TOKEN:
        return
    if not authorization or not authorization.startswith("Bearer "):
        raise HTTPException(401, "Unauthorized")
    if authorization.split(" ", 1)[1].strip() != API_TOKEN:
        raise HTTPException(401, "Unauthorized")

@app.get("/ping")
def ping():
    return {"ok": True}

@app.post("/ingest")
def ingest(payload: IngestPayload, authorization: Optional[str] = Header(None)):
    _auth(authorization)
    # ここでDB保存などを実装。まずは受領だけ。
    print("INGEST", payload.model_dump())  # RenderのLogsに出ます
    return {"status": "ok", "received": len(payload.items)}
